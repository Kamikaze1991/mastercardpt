/*
 * Pay with Rewards APIs
 *
 * Pay with Rewards allows cardholders to redeem points for purchases made with an enrolled Mastercard card. The following APIs create the Pay with Rewards user experience, and can be used inside a banking app or other mobile apps.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: paywithrewards@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pbo.App.MastercardApi.Client.Api;
using Pbo.App.MastercardApi.Client.Model;
using Pbo.App.MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pbo.App.MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing AccountUpdateRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AccountUpdateRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AccountUpdateRequest
        //private AccountUpdateRequest instance;

        public AccountUpdateRequestTests()
        {
            // TODO uncomment below to create an instance of AccountUpdateRequest
            //instance = new AccountUpdateRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AccountUpdateRequest
        /// </summary>
        [Fact]
        public void AccountUpdateRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" AccountUpdateRequest
            //Assert.IsType<AccountUpdateRequest>(instance);
        }


        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'AccountIdType'
        /// </summary>
        [Fact]
        public void AccountIdTypeTest()
        {
            // TODO unit test for the property 'AccountIdType'
        }
        /// <summary>
        /// Test the property 'PcloAccountStatusCode'
        /// </summary>
        [Fact]
        public void PcloAccountStatusCodeTest()
        {
            // TODO unit test for the property 'PcloAccountStatusCode'
        }
        /// <summary>
        /// Test the property 'UserDefined1'
        /// </summary>
        [Fact]
        public void UserDefined1Test()
        {
            // TODO unit test for the property 'UserDefined1'
        }
        /// <summary>
        /// Test the property 'UserDefined2'
        /// </summary>
        [Fact]
        public void UserDefined2Test()
        {
            // TODO unit test for the property 'UserDefined2'
        }
        /// <summary>
        /// Test the property 'UserDefined3'
        /// </summary>
        [Fact]
        public void UserDefined3Test()
        {
            // TODO unit test for the property 'UserDefined3'
        }
        /// <summary>
        /// Test the property 'UserDefined4'
        /// </summary>
        [Fact]
        public void UserDefined4Test()
        {
            // TODO unit test for the property 'UserDefined4'
        }
        /// <summary>
        /// Test the property 'UserDefined5'
        /// </summary>
        [Fact]
        public void UserDefined5Test()
        {
            // TODO unit test for the property 'UserDefined5'
        }
        /// <summary>
        /// Test the property 'UserDefined6'
        /// </summary>
        [Fact]
        public void UserDefined6Test()
        {
            // TODO unit test for the property 'UserDefined6'
        }
        /// <summary>
        /// Test the property 'UserDefined7'
        /// </summary>
        [Fact]
        public void UserDefined7Test()
        {
            // TODO unit test for the property 'UserDefined7'
        }
        /// <summary>
        /// Test the property 'UserDefined8'
        /// </summary>
        [Fact]
        public void UserDefined8Test()
        {
            // TODO unit test for the property 'UserDefined8'
        }

    }

}
