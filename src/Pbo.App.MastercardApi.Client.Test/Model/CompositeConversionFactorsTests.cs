/*
 * Pay with Rewards APIs
 *
 * Pay with Rewards allows cardholders to redeem points for purchases made with an enrolled Mastercard card. The following APIs create the Pay with Rewards user experience, and can be used inside a banking app or other mobile apps.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: paywithrewards@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pbo.App.MastercardApi.Client.Api;
using Pbo.App.MastercardApi.Client.Model;
using Pbo.App.MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pbo.App.MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing CompositeConversionFactors
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CompositeConversionFactorsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CompositeConversionFactors
        //private CompositeConversionFactors instance;

        public CompositeConversionFactorsTests()
        {
            // TODO uncomment below to create an instance of CompositeConversionFactors
            //instance = new CompositeConversionFactors();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CompositeConversionFactors
        /// </summary>
        [Fact]
        public void CompositeConversionFactorsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CompositeConversionFactors
            //Assert.IsType<CompositeConversionFactors>(instance);
        }


        /// <summary>
        /// Test the property 'AuthRewardsServiceId'
        /// </summary>
        [Fact]
        public void AuthRewardsServiceIdTest()
        {
            // TODO unit test for the property 'AuthRewardsServiceId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'OverrideCategoryDetails'
        /// </summary>
        [Fact]
        public void OverrideCategoryDetailsTest()
        {
            // TODO unit test for the property 'OverrideCategoryDetails'
        }
        /// <summary>
        /// Test the property 'ConversionRuleTiers'
        /// </summary>
        [Fact]
        public void ConversionRuleTiersTest()
        {
            // TODO unit test for the property 'ConversionRuleTiers'
        }

    }

}
