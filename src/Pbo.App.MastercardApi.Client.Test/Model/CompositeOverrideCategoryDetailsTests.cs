/*
 * Pay with Rewards APIs
 *
 * Pay with Rewards allows cardholders to redeem points for purchases made with an enrolled Mastercard card. The following APIs create the Pay with Rewards user experience, and can be used inside a banking app or other mobile apps.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: paywithrewards@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pbo.App.MastercardApi.Client.Api;
using Pbo.App.MastercardApi.Client.Model;
using Pbo.App.MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pbo.App.MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing CompositeOverrideCategoryDetails
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CompositeOverrideCategoryDetailsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CompositeOverrideCategoryDetails
        //private CompositeOverrideCategoryDetails instance;

        public CompositeOverrideCategoryDetailsTests()
        {
            // TODO uncomment below to create an instance of CompositeOverrideCategoryDetails
            //instance = new CompositeOverrideCategoryDetails();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CompositeOverrideCategoryDetails
        /// </summary>
        [Fact]
        public void CompositeOverrideCategoryDetailsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CompositeOverrideCategoryDetails
            //Assert.IsType<CompositeOverrideCategoryDetails>(instance);
        }


        /// <summary>
        /// Test the property 'CardHolderNumFrom'
        /// </summary>
        [Fact]
        public void CardHolderNumFromTest()
        {
            // TODO unit test for the property 'CardHolderNumFrom'
        }
        /// <summary>
        /// Test the property 'CardHolderNumTo'
        /// </summary>
        [Fact]
        public void CardHolderNumToTest()
        {
            // TODO unit test for the property 'CardHolderNumTo'
        }
        /// <summary>
        /// Test the property 'MerchantCategoryName'
        /// </summary>
        [Fact]
        public void MerchantCategoryNameTest()
        {
            // TODO unit test for the property 'MerchantCategoryName'
        }
        /// <summary>
        /// Test the property 'MerchantCategoryValue'
        /// </summary>
        [Fact]
        public void MerchantCategoryValueTest()
        {
            // TODO unit test for the property 'MerchantCategoryValue'
        }
        /// <summary>
        /// Test the property 'MerchantGroupName'
        /// </summary>
        [Fact]
        public void MerchantGroupNameTest()
        {
            // TODO unit test for the property 'MerchantGroupName'
        }
        /// <summary>
        /// Test the property 'MerchantGroupValue'
        /// </summary>
        [Fact]
        public void MerchantGroupValueTest()
        {
            // TODO unit test for the property 'MerchantGroupValue'
        }
        /// <summary>
        /// Test the property 'MerchantSetName'
        /// </summary>
        [Fact]
        public void MerchantSetNameTest()
        {
            // TODO unit test for the property 'MerchantSetName'
        }
        /// <summary>
        /// Test the property 'MerchantSetValue'
        /// </summary>
        [Fact]
        public void MerchantSetValueTest()
        {
            // TODO unit test for the property 'MerchantSetValue'
        }
        /// <summary>
        /// Test the property 'BankProductName'
        /// </summary>
        [Fact]
        public void BankProductNameTest()
        {
            // TODO unit test for the property 'BankProductName'
        }
        /// <summary>
        /// Test the property 'BankProductValue'
        /// </summary>
        [Fact]
        public void BankProductValueTest()
        {
            // TODO unit test for the property 'BankProductValue'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }

    }

}
