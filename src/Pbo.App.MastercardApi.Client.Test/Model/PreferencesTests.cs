/*
 * Pay with Rewards APIs
 *
 * Pay with Rewards allows cardholders to redeem points for purchases made with an enrolled Mastercard card. The following APIs create the Pay with Rewards user experience, and can be used inside a banking app or other mobile apps.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: paywithrewards@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pbo.App.MastercardApi.Client.Api;
using Pbo.App.MastercardApi.Client.Model;
using Pbo.App.MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pbo.App.MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing Preferences
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PreferencesTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Preferences
        //private Preferences instance;

        public PreferencesTests()
        {
            // TODO uncomment below to create an instance of Preferences
            //instance = new Preferences();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Preferences
        /// </summary>
        [Fact]
        public void PreferencesInstanceTest()
        {
            // TODO uncomment below to test "IsType" Preferences
            //Assert.IsType<Preferences>(instance);
        }


        /// <summary>
        /// Test the property 'EmailAddress'
        /// </summary>
        [Fact]
        public void EmailAddressTest()
        {
            // TODO unit test for the property 'EmailAddress'
        }
        /// <summary>
        /// Test the property 'FixedAccountRedemptionAmount'
        /// </summary>
        [Fact]
        public void FixedAccountRedemptionAmountTest()
        {
            // TODO unit test for the property 'FixedAccountRedemptionAmount'
        }
        /// <summary>
        /// Test the property 'MinAccountPurchaseThreshold'
        /// </summary>
        [Fact]
        public void MinAccountPurchaseThresholdTest()
        {
            // TODO unit test for the property 'MinAccountPurchaseThreshold'
        }
        /// <summary>
        /// Test the property 'ReceiveEmailSw'
        /// </summary>
        [Fact]
        public void ReceiveEmailSwTest()
        {
            // TODO unit test for the property 'ReceiveEmailSw'
        }
        /// <summary>
        /// Test the property 'ReceiveSMSSw'
        /// </summary>
        [Fact]
        public void ReceiveSMSSwTest()
        {
            // TODO unit test for the property 'ReceiveSMSSw'
        }
        /// <summary>
        /// Test the property 'RedemptionFrequency'
        /// </summary>
        [Fact]
        public void RedemptionFrequencyTest()
        {
            // TODO unit test for the property 'RedemptionFrequency'
        }
        /// <summary>
        /// Test the property 'SmsNumber'
        /// </summary>
        [Fact]
        public void SmsNumberTest()
        {
            // TODO unit test for the property 'SmsNumber'
        }

    }

}
