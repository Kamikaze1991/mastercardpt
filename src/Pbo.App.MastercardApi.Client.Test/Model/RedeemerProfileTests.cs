/*
 * Pay with Rewards APIs
 *
 * Pay with Rewards allows cardholders to redeem points for purchases made with an enrolled Mastercard card. The following APIs create the Pay with Rewards user experience, and can be used inside a banking app or other mobile apps.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: paywithrewards@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pbo.App.MastercardApi.Client.Api;
using Pbo.App.MastercardApi.Client.Model;
using Pbo.App.MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pbo.App.MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing RedeemerProfile
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RedeemerProfileTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RedeemerProfile
        //private RedeemerProfile instance;

        public RedeemerProfileTests()
        {
            // TODO uncomment below to create an instance of RedeemerProfile
            //instance = new RedeemerProfile();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RedeemerProfile
        /// </summary>
        [Fact]
        public void RedeemerProfileInstanceTest()
        {
            // TODO uncomment below to test "IsType" RedeemerProfile
            //Assert.IsType<RedeemerProfile>(instance);
        }


        /// <summary>
        /// Test the property 'AccountInfo'
        /// </summary>
        [Fact]
        public void AccountInfoTest()
        {
            // TODO unit test for the property 'AccountInfo'
        }
        /// <summary>
        /// Test the property 'HouseholdInfo'
        /// </summary>
        [Fact]
        public void HouseholdInfoTest()
        {
            // TODO unit test for the property 'HouseholdInfo'
        }
        /// <summary>
        /// Test the property 'ConversionFactors'
        /// </summary>
        [Fact]
        public void ConversionFactorsTest()
        {
            // TODO unit test for the property 'ConversionFactors'
        }
        /// <summary>
        /// Test the property 'CompositeConversionFactors'
        /// </summary>
        [Fact]
        public void CompositeConversionFactorsTest()
        {
            // TODO unit test for the property 'CompositeConversionFactors'
        }
        /// <summary>
        /// Test the property 'Preferences'
        /// </summary>
        [Fact]
        public void PreferencesTest()
        {
            // TODO unit test for the property 'Preferences'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'UserIdType'
        /// </summary>
        [Fact]
        public void UserIdTypeTest()
        {
            // TODO unit test for the property 'UserIdType'
        }

    }

}
