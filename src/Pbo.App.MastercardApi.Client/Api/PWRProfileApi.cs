/*
 * Pay with Rewards APIs
 *
 * Pay with Rewards allows cardholders to redeem points for purchases made with an enrolled Mastercard card. The following APIs create the Pay with Rewards user experience, and can be used inside a banking app or other mobile apps.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: paywithrewards@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Pbo.App.MastercardApi.Client.Client;
using Pbo.App.MastercardApi.Client.Model;

namespace Pbo.App.MastercardApi.Client.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPWRProfileApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <returns>RedeemerProfile</returns>
        RedeemerProfile GetProfileUsingGET(string redemptionType, string id, string userIdType = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <returns>ApiResponse of RedeemerProfile</returns>
        ApiResponse<RedeemerProfile> GetProfileUsingGETWithHttpInfo(string redemptionType, string id, string userIdType = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <returns>RedeemerProfile</returns>
        RedeemerProfile SearchProfileUsingPOST(SearchProfileRequest searchProfileRequest);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <returns>ApiResponse of RedeemerProfile</returns>
        ApiResponse<RedeemerProfile> SearchProfileUsingPOSTWithHttpInfo(SearchProfileRequest searchProfileRequest);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPWRProfileApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RedeemerProfile</returns>
        System.Threading.Tasks.Task<RedeemerProfile> GetProfileUsingGETAsync(string redemptionType, string id, string userIdType = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RedeemerProfile)</returns>
        System.Threading.Tasks.Task<ApiResponse<RedeemerProfile>> GetProfileUsingGETWithHttpInfoAsync(string redemptionType, string id, string userIdType = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RedeemerProfile</returns>
        System.Threading.Tasks.Task<RedeemerProfile> SearchProfileUsingPOSTAsync(SearchProfileRequest searchProfileRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </remarks>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RedeemerProfile)</returns>
        System.Threading.Tasks.Task<ApiResponse<RedeemerProfile>> SearchProfileUsingPOSTWithHttpInfoAsync(SearchProfileRequest searchProfileRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPWRProfileApi : IPWRProfileApiSync, IPWRProfileApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PWRProfileApi : IPWRProfileApi
    {
        private Pbo.App.MastercardApi.Client.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PWRProfileApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PWRProfileApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PWRProfileApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PWRProfileApi(String basePath)
        {
            this.Configuration = Pbo.App.MastercardApi.Client.Client.Configuration.MergeConfigurations(
                Pbo.App.MastercardApi.Client.Client.GlobalConfiguration.Instance,
                new Pbo.App.MastercardApi.Client.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Pbo.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Pbo.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Pbo.App.MastercardApi.Client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PWRProfileApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PWRProfileApi(Pbo.App.MastercardApi.Client.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Pbo.App.MastercardApi.Client.Client.Configuration.MergeConfigurations(
                Pbo.App.MastercardApi.Client.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Pbo.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Pbo.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Pbo.App.MastercardApi.Client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PWRProfileApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PWRProfileApi(Pbo.App.MastercardApi.Client.Client.ISynchronousClient client, Pbo.App.MastercardApi.Client.Client.IAsynchronousClient asyncClient, Pbo.App.MastercardApi.Client.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Pbo.App.MastercardApi.Client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Pbo.App.MastercardApi.Client.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Pbo.App.MastercardApi.Client.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Pbo.App.MastercardApi.Client.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Pbo.App.MastercardApi.Client.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <returns>RedeemerProfile</returns>
        public RedeemerProfile GetProfileUsingGET(string redemptionType, string id, string userIdType = default(string))
        {
            Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile> localVarResponse = GetProfileUsingGETWithHttpInfo(redemptionType, id, userIdType);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <returns>ApiResponse of RedeemerProfile</returns>
        public Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile> GetProfileUsingGETWithHttpInfo(string redemptionType, string id, string userIdType = default(string))
        {
            // verify the required parameter 'redemptionType' is set
            if (redemptionType == null)
                throw new Pbo.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'redemptionType' when calling PWRProfileApi->GetProfileUsingGET");

            // verify the required parameter 'id' is set
            if (id == null)
                throw new Pbo.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'id' when calling PWRProfileApi->GetProfileUsingGET");

            Pbo.App.MastercardApi.Client.Client.RequestOptions localVarRequestOptions = new Pbo.App.MastercardApi.Client.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Pbo.App.MastercardApi.Client.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Pbo.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "redemption_type", redemptionType));
            if (userIdType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Pbo.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "user_id_type", userIdType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<RedeemerProfile>("/redeemers/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProfileUsingGET", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RedeemerProfile</returns>
        public async System.Threading.Tasks.Task<RedeemerProfile> GetProfileUsingGETAsync(string redemptionType, string id, string userIdType = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile> localVarResponse = await GetProfileUsingGETWithHttpInfoAsync(redemptionType, id, userIdType, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a cardholder&#39;s Pay with Rewards program settings. including points balance, communication preferences and other parameters. POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="redemptionType">Redemption type should be PWR.</param>
        /// <param name="id">Unique identifier of the user.</param>
        /// <param name="userIdType">Identifier type for the given user such as RANAC. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RedeemerProfile)</returns>
        public async System.Threading.Tasks.Task<Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile>> GetProfileUsingGETWithHttpInfoAsync(string redemptionType, string id, string userIdType = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'redemptionType' is set
            if (redemptionType == null)
                throw new Pbo.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'redemptionType' when calling PWRProfileApi->GetProfileUsingGET");

            // verify the required parameter 'id' is set
            if (id == null)
                throw new Pbo.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'id' when calling PWRProfileApi->GetProfileUsingGET");


            Pbo.App.MastercardApi.Client.Client.RequestOptions localVarRequestOptions = new Pbo.App.MastercardApi.Client.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Pbo.App.MastercardApi.Client.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Pbo.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "redemption_type", redemptionType));
            if (userIdType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Pbo.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "user_id_type", userIdType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<RedeemerProfile>("/redeemers/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProfileUsingGET", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <returns>RedeemerProfile</returns>
        public RedeemerProfile SearchProfileUsingPOST(SearchProfileRequest searchProfileRequest)
        {
            Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile> localVarResponse = SearchProfileUsingPOSTWithHttpInfo(searchProfileRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <returns>ApiResponse of RedeemerProfile</returns>
        public Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile> SearchProfileUsingPOSTWithHttpInfo(SearchProfileRequest searchProfileRequest)
        {
            // verify the required parameter 'searchProfileRequest' is set
            if (searchProfileRequest == null)
                throw new Pbo.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'searchProfileRequest' when calling PWRProfileApi->SearchProfileUsingPOST");

            Pbo.App.MastercardApi.Client.Client.RequestOptions localVarRequestOptions = new Pbo.App.MastercardApi.Client.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = searchProfileRequest;


            // make the HTTP request
            var localVarResponse = this.Client.Post<RedeemerProfile>("/redeemers/search", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SearchProfileUsingPOST", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RedeemerProfile</returns>
        public async System.Threading.Tasks.Task<RedeemerProfile> SearchProfileUsingPOSTAsync(SearchProfileRequest searchProfileRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile> localVarResponse = await SearchProfileUsingPOSTWithHttpInfoAsync(searchProfileRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Retrieves a cardholder&#39;s Pay with Rewards program settings, including points balance, conversion rules, communication preferences and more.&lt;br/&gt;&lt;br/&gt; POST and GET operations are available. Use POST when retrieving profile details based on sensitive data such as BAN or BCN. Use GET with RANAC for user_id_type.&lt;br/&gt;&lt;br/&gt; This endpoint is not for retrieving cardholders&#39; personal information. Use GET /users for personal information.
        /// </summary>
        /// <exception cref="Pbo.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchProfileRequest">request</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RedeemerProfile)</returns>
        public async System.Threading.Tasks.Task<Pbo.App.MastercardApi.Client.Client.ApiResponse<RedeemerProfile>> SearchProfileUsingPOSTWithHttpInfoAsync(SearchProfileRequest searchProfileRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'searchProfileRequest' is set
            if (searchProfileRequest == null)
                throw new Pbo.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'searchProfileRequest' when calling PWRProfileApi->SearchProfileUsingPOST");


            Pbo.App.MastercardApi.Client.Client.RequestOptions localVarRequestOptions = new Pbo.App.MastercardApi.Client.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Pbo.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = searchProfileRequest;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<RedeemerProfile>("/redeemers/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SearchProfileUsingPOST", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
